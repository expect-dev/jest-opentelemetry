apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: otel-instrumentation
spec:
  nodejs:
    image: traceloop/instrument-opentelemetry:node-0.3.0
  exporter:
    endpoint: http://otel-collector:4317
  propagators:
    - tracecontext
    - baggage
    - b3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-service
  template:
    metadata:
      labels:
        app: orders-service
      annotations:
        instrumentation.opentelemetry.io/inject-nodejs: 'true'
    spec:
      containers:
        - name: orders-service
          image: test-servers
          ports:
            - containerPort: 3000
          env:
            - name: SERVICE_NAME
              value: 'orders-service'
            - name: ORDERS_SERVICE
              value: 'TRUE'
            - name: EMAILS_SERVICE_URL
              value: 'http://emails-service:3000'
            - name: PORT
              value: '3000'
          imagePullPolicy: Never

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emails-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emails-service
  template:
    metadata:
      labels:
        app: emails-service
      annotations:
        instrumentation.opentelemetry.io/inject-nodejs: 'true'
    spec:
      containers:
        - name: emails-service
          image: test-servers
          ports:
            - containerPort: 3000
          env:
            - name: SERVICE_NAME
              value: 'emails-service'
            - name: EMAILS_SERVICE
              value: 'TRUE'
            - name: PORT
              value: '3000'
          imagePullPolicy: Never

---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
spec:
  selector:
    app: orders-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: emails-service
spec:
  selector:
    app: emails-service
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
spec:
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
        timeout: 100ms

    exporters:
      logging:
        verbosity: detailed
      otlphttp:
        endpoint: http://host.docker.internal:4123

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [logging, otlphttp]
